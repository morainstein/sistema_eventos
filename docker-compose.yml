services:
  db:
    image: mysql:latest
    container_name: eventos-database
    environment:
      MYSQL_USER: "db_user"
      MYSQL_PASSWORD: "db_password"
      MYSQL_DATABASE: "sistema_eventos"
      
    # ---- SOMENTE PARA FACILITAR TESTES! 
    # Em produção, utiliza-se senha de root aleatória por segurança  
      MYSQL_ROOT_PASSWORD: "123"
      # MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    # -------------------------------------------------------------
    
    networks:
      - eventos-network
    ports:
      - "3306:3306"

  app1:
    build:
      context: ./infra/app
    container_name: eventos-app1
    working_dir: /app
    volumes:
      - .:/app
      - ./infra/app/php-prod.ini:/usr/local/etc/php/conf.d/prod.ini
      - ./infra/app/prod-init.sh:/app/prod-init.sh
      - ./infra/app/test-init.sh:/app/test-init.sh
      - ./infra/app/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    networks:
      - eventos-network
    depends_on:
      - db

  app2:
    build:
      context: ./infra/app
    container_name: eventos-app2
    working_dir: /app
    volumes:
      - .:/app
      - ./infra/app/php-prod.ini:/usr/local/etc/php/conf.d/prod.ini
      - ./infra/app/prod-init.sh:/app/prod-init.sh
      - ./infra/app/test-init.sh:/app/test-init.sh
      - ./infra/app/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    networks:
      - eventos-network
    depends_on:
      - db

  web:
    image: nginx:latest
    container_name: eventos-nginx
    volumes:
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./infra/nginx/fastcgi_params:/etc/nginx/fastcgi_params
    networks:
      - eventos-network
    ports:
      - "8080:80"
    depends_on:
      - app1
      - app2

  smtp:
    image: axllent/mailpit
    container_name: eventos-mailpit
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - eventos-network
    ports:
      - "8025:8025"
    depends_on:
      - app1
      - app2

  bucket:
    image: quay.io/minio/minio 
    container_name: eventos-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: bucket_user
      MINIO_ROOT_PASSWORD: bucket_password
    networks:
      - eventos-network
    ports:
      - "9001:9001"
    depends_on:
      - app1
      - app2

  bucket-setup:
      image: minio/mc
      networks:
      - eventos-network
      depends_on:
        - bucket
      entrypoint: >
        /bin/sh -c "
        until (mc alias set local http://bucket:9000 bucket_user bucket_password) do sleep 5; done &&
        mc mb --ignore-existing local/uploads &&
        exit 0
        "

networks:
  eventos-network:
    driver: bridge